{"version":3,"sources":["helpers/index.ts","components/set-times-form/index.ts","components/set-times-form/set-times-form.tsx","components/timer/index.ts","components/timer/timer.tsx","components/app/index.ts","components/app/app.tsx","index.tsx","components/set-times-form/set-times-form.module.css","components/timer/timer.module.css"],"names":["getMinutes","seconds","Math","floor","getSeconds","SetTimesForm","props","workTime","restTime","onSubmit","hideForm","isFormVisible","useState","workmin","setWorkmin","worksec","setWorksec","restmin","setRestmin","restsec","setRestsec","handleChange","e","value","Number","target","name","preventDefault","className","styles","form","hidden","title","interval","labels","onChange","type","min","max","defaultValue","buttons","close_btn","onClick","Timer","setTitle","setWorkTime","setRestTime","isWork","setIsWork","secondsLeft","setSecondsLeft","isTimerStarted","setIsTimerStarted","setIsFormVisible","minutes","toString","padStart","useEffect","setInterval","clearInterval","timer","clock","pause_btn","start_btn","stop_btn","newWorkTime","newRestTime","cog_btn","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d1273e39.chunk.js","sourcesContent":["export const getMinutes = (seconds: number): number => {\n  return Math.floor(seconds / 60);\n};\n\nexport const getSeconds = (seconds: number): number => {\n  return seconds - getMinutes(seconds) * 60;\n};\n","import SetTimesForm from \"./set-times-form\";\n\nexport default SetTimesForm;\n","import React, { FC, useState } from \"react\";\n\nimport { getMinutes, getSeconds } from \"../../helpers\";\n\nimport styles from \"./set-times-form.module.css\";\n\ntype SetTimesFormProps = {\n  workTime: number;\n  restTime: number;\n  onSubmit: (newWorkTime: number, newRestTime: number) => void;\n  hideForm: () => void;\n  isFormVisible: boolean;\n};\n\nconst SetTimesForm: FC<SetTimesFormProps> = (props) => {\n  const { workTime, restTime, onSubmit, hideForm, isFormVisible } = props;\n\n  const [workmin, setWorkmin] = useState<number>(getMinutes(workTime));\n  const [worksec, setWorksec] = useState<number>(getSeconds(workTime));\n  const [restmin, setRestmin] = useState<number>(getMinutes(restTime));\n  const [restsec, setRestsec] = useState<number>(getSeconds(restTime));\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = Number(e.target.value);\n    if (e.target.name === \"workmin\") {\n      setWorkmin(value);\n    } else if (e.target.name === \"worksec\") {\n      setWorksec(value);\n    } else if (e.target.name === \"restmin\") {\n      setRestmin(value);\n    } else if (e.target.name === \"restsec\") {\n      setRestsec(value);\n    } else {\n      return;\n    }\n  };\n\n  const submitHander = (e: React.FormEvent) => {\n    const newWorkTime = workmin * 60 + worksec;\n    const newRestTime = restmin * 60 + restsec;\n    onSubmit(newWorkTime, newRestTime);\n    e.preventDefault();\n  };\n\n  return (\n    <form\n      onSubmit={submitHander}\n      className={`${styles.form} ${isFormVisible ? \"\" : styles.hidden}`}\n    >\n      <h2 className={styles.title}>Settings</h2>\n      <div className={styles.interval}>\n        <p>Work Interval: </p>\n        <div className={styles.labels}>\n          <label>\n            <input\n              onChange={handleChange}\n              name=\"workmin\"\n              type=\"number\"\n              min=\"0\"\n              max=\"59\"\n              defaultValue={getMinutes(workTime)}\n            />{\" \"}\n            min\n          </label>\n          <label>\n            <input\n              onChange={handleChange}\n              name=\"worksec\"\n              type=\"number\"\n              min=\"0\"\n              max=\"59\"\n              defaultValue={getSeconds(workTime)}\n            />{\" \"}\n            sec\n          </label>\n        </div>\n      </div>\n      <div className={styles.interval}>\n        <p>Rest Interval: </p>\n        <div className={styles.labels}>\n          <label>\n            <input\n              onChange={handleChange}\n              name=\"restmin\"\n              type=\"number\"\n              min=\"0\"\n              max=\"59\"\n              defaultValue={getMinutes(restTime)}\n            />{\" \"}\n            min\n          </label>\n          <label>\n            <input\n              onChange={handleChange}\n              name=\"restsec\"\n              type=\"number\"\n              min=\"0\"\n              max=\"59\"\n              defaultValue={getSeconds(restTime)}\n            />{\" \"}\n            sec\n          </label>\n        </div>\n      </div>\n      <div className={styles.buttons}>\n        <input type=\"submit\" value=\"Save\" />\n        <input type=\"reset\" value=\"Reset\" />\n      </div>\n      <button className={styles.close_btn} onClick={hideForm}>\n        <i className=\"fa fa-times-circle\"></i>\n      </button>\n    </form>\n  );\n};\n\nexport default SetTimesForm;\n","import Timer from \"./timer\";\n\nexport default Timer;\n","import React, { FC, useEffect, useState } from \"react\";\n\nimport { getMinutes, getSeconds } from \"../../helpers\";\nimport SetTimesForm from \"../set-times-form\";\n\nimport styles from \"./timer.module.css\";\n\nconst Timer: FC = () => {\n  const [title, setTitle] = useState(\"start pomodoro\");\n  const [workTime, setWorkTime] = useState(10);\n  const [restTime, setRestTime] = useState(5);\n  const [isWork, setIsWork] = useState(true);\n  const [secondsLeft, setSecondsLeft] = useState(workTime);\n  const [isTimerStarted, setIsTimerStarted] = useState(false);\n\n  const [isFormVisible, setIsFormVisible] = useState(false);\n\n  const minutes = getMinutes(secondsLeft).toString().padStart(2, \"0\");\n  const seconds = getSeconds(secondsLeft).toString().padStart(2, \"0\");\n\n  const startTimer = () => {\n    setIsTimerStarted(true);\n    setTitle(\"focus on your task\");\n  };\n  const pauseTimer = () => {\n    setTitle(\"pause...\");\n    setIsTimerStarted(false);\n  };\n  const stopTimer = () => {\n    setTitle(\"start pomodoro\");\n    setIsTimerStarted(false);\n    setSecondsLeft(workTime);\n    setIsWork(true);\n  };\n\n  const onSubmit = (newWorkTime: number, newRestTime: number): void => {\n    setWorkTime(newWorkTime);\n    setRestTime(newRestTime);\n    //setSecondsLeft(newWorkTime);\n  };\n\n  const showForm = () => {\n    setIsFormVisible(true);\n  };\n\n  const hideForm = () => {\n    setIsFormVisible(false);\n  };\n\n  useEffect(() => {\n    if (isTimerStarted) {\n      const interval = setInterval(() => {\n        if (secondsLeft > 0) {\n          setSecondsLeft((secondsLeft) => secondsLeft - 1);\n        } else {\n          // if secondsLeft == 0 (timer ended) and it was work time\n          if (isWork) {\n            // set secondsLeft to restTime\n            setSecondsLeft(restTime);\n            // change status to rest time\n            setIsWork(false);\n            //set title for rest time\n            setTitle(\"short break\");\n          } else {\n            // if it was rest time\n            // stop timer\n            setIsTimerStarted(false);\n            // set timer interval to work time\n            setSecondsLeft(workTime);\n            // set status to workTime\n            setIsWork(true);\n            // set title for default\n            setTitle(\"start pomodoro\");\n          }\n        }\n      }, 1000);\n\n      return () => clearInterval(interval);\n    }\n  });\n\n  return (\n    <div className={styles.timer}>\n      <h2 className={styles.title}>{title}</h2>\n      <div className={styles.clock}>\n        {minutes} : {seconds}\n      </div>\n      <div className={styles.buttons}>\n        <button\n          onClick={isTimerStarted ? pauseTimer : startTimer}\n          className={isTimerStarted ? styles.pause_btn : styles.start_btn}\n        >\n          {isTimerStarted ? (\n            <i className=\"fa fa-pause\"></i>\n          ) : (\n            <i className=\"fa fa-play\"></i>\n          )}\n        </button>\n        <button onClick={stopTimer} className={styles.stop_btn}>\n          <i className=\"fa fa-stop\"></i>\n        </button>\n      </div>\n      <SetTimesForm\n        onSubmit={onSubmit}\n        workTime={workTime}\n        restTime={restTime}\n        isFormVisible={isFormVisible}\n        hideForm={hideForm}\n      />\n      <button className={styles.cog_btn} onClick={showForm}>\n        <i className=\"fa fa-cog\"></i>\n      </button>\n    </div>\n  );\n};\n\nexport default Timer;\n","import App from \"./app\";\n\nexport default App;\n","import React, { FC } from \"react\";\n\nimport Timer from \"../timer\";\n\nconst App: FC = () => {\n  return <Timer />;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./components/app\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"set-times-form_form__2qKLt\",\"hidden\":\"set-times-form_hidden__upCur\",\"title\":\"set-times-form_title__39dbz\",\"buttons\":\"set-times-form_buttons__o-rtA\",\"interval\":\"set-times-form_interval__NicGJ\",\"labels\":\"set-times-form_labels__2nqlF\",\"close_btn\":\"set-times-form_close_btn__2K12i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"timer_timer__2oXym\",\"title\":\"timer_title__WsQuo\",\"clock\":\"timer_clock__2DQD0\",\"buttons\":\"timer_buttons__2PtGL\",\"cog_btn\":\"timer_cog_btn__3lWLy\"};"],"sourceRoot":""}